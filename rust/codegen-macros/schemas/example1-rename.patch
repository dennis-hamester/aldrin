--- example1-orig.rs
+++ example1-patched.rs
@@ -5,22 +5,22 @@
 
 #[derive(Debug, Clone, Default)]
 #[non_exhaustive]
-pub struct MyStruct {
+pub struct MyStructRenamed {
     pub field1: Option<u32>,
     pub field2: Option<u32>,
 }
 
-impl MyStruct {
+impl MyStructRenamed {
     pub fn new() -> Self {
         Default::default()
     }
 
-    pub fn builder() -> MyStructBuilder {
-        MyStructBuilder::new()
+    pub fn builder() -> MyStructRenamedBuilder {
+        MyStructRenamedBuilder::new()
     }
 }
 
-impl aldrin_client::private::aldrin_proto::Serialize for MyStruct {
+impl aldrin_client::private::aldrin_proto::Serialize for MyStructRenamed {
     fn serialize(&self, serializer: aldrin_client::private::aldrin_proto::Serializer) -> Result<(), aldrin_client::private::aldrin_proto::SerializeError> {
         let num_fields = if self.field1.is_some() { 1 } else { 0 } + if self.field2.is_some() { 1 } else { 0 };
         let mut serializer = serializer.serialize_struct(num_fields)?;
@@ -39,7 +39,7 @@
     }
 }
 
-impl aldrin_client::private::aldrin_proto::Deserialize for MyStruct {
+impl aldrin_client::private::aldrin_proto::Deserialize for MyStructRenamed {
     fn deserialize(deserializer: aldrin_client::private::aldrin_proto::Deserializer) -> Result<Self, aldrin_client::private::aldrin_proto::DeserializeError> {
         let mut deserializer = deserializer.deserialize_struct()?;
 
@@ -64,7 +64,7 @@
 }
 
 #[derive(Debug, Clone, Default)]
-pub struct MyStructBuilder {
+pub struct MyStructRenamedBuilder {
     #[doc(hidden)]
     field1: Option<u32>,
 
@@ -73,7 +73,7 @@
 
 }
 
-impl MyStructBuilder {
+impl MyStructRenamedBuilder {
     pub fn new() -> Self {
         Default::default()
     }
@@ -88,8 +88,8 @@
         self
     }
 
-    pub fn build(self) -> MyStruct {
-        MyStruct {
+    pub fn build(self) -> MyStructRenamed {
+        MyStructRenamed {
             field1: self.field1,
             field2: self.field2,
         }
